"""
Copyright (C) J Leadbetter <j@jleadbetter.com>
Affero GPL v3
"""

import uuid
from typing import Dict, List, Optional

from pydantic import validator

from ..utils.languages import LanguageCode
from .base import GlobalBaseModel, HashableMixin
from .files import BinaryFileData
from .sentences import SentenceDB, SentenceUI
from .users import UserUI


class DocumentDB(HashableMixin, GlobalBaseModel):
    """
    Representation of a document to be stored in the database
    """

    id: Optional[uuid.UUID] = None  # Generated by the database when created.
    user_id: uuid.UUID  # UserProfile uuid
    display_name: str
    language_code: LanguageCode
    author: Optional[str] = None
    sentences: Optional[List[SentenceDB]] = []
    attrs: Optional[Dict[str, str]] = {}
    binary_data: Optional[BinaryFileData] = None

    @property
    def unique_fields(self):
        return ['user_id', 'display_name', 'language_code']


class DocumentUI(HashableMixin, GlobalBaseModel):
    """
    Full document for display in the UI
    """

    id: uuid.UUID
    user: UserUI
    displayName: str
    language: str
    sentences: List[SentenceUI]
    attrs: Optional[Dict[str, str]] = {}
